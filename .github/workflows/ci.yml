name: CI

on:
  push:
    branches: ['**']        # run quick checks for any branch push
  pull_request:
    branches: ['**']       # run quick checks for any PR
  workflow_dispatch: {}    # manual trigger for full runs

permissions:
  contents: read

jobs:
  quick-checks:
    name: Quick checks (lint & unit tests)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: cd src && go mod download

      - name: Run go vet
        run: cd src && go vet ./...

      - name: Run unit tests (quick)
        run: |
          cd src
          go test ./... -v -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: src/coverage.out

  full-build:
    name: Full build / release (conditional)
    runs-on: ubuntu-latest
    needs: quick-checks
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/dev' ||
      startsWith(github.ref, 'refs/heads/release/')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: cd src && go mod download

      - name: Build (sanity)
        run: |
          cd src
          go build -v -o ../arrsync

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: arrsync-sanity
          path: arrsync
